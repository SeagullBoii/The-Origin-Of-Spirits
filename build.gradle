buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'

version = '1.16.5-beta-1.1.1'
group = 'net.seagullboi.originofspirits' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'originofspirits'

java.toolchain.languageVersion = JavaLanguageVersion.of(8) // Mojang ships Java 8 to end users, so your mod should target Java 8.

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // Channel:   Version:
    // snapshot   YYYYMMDD   Snapshot are built nightly.
    // stable     #          Stables are built at the discretion of the MCP team.
    // official   MCVersion  Official field/method names from Mojang mapping files
    //
    // You must be aware of the Mojang license when using the 'official' mappings.
    // See more information here: https://github.com/MinecraftForge/MCPConfig/blob/master/Mojang.md
    //
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'snapshot', version: '20201028-1.16.3'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // The markers can be changed as needed.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            // You can set various levels here.
            // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
            property 'forge.logging.console.level', 'debug'

            mods {
                originofspirits {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // The markers can be changed as needed.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            // You can set various levels here.
            // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
            property 'forge.logging.console.level', 'debug'

            mods {
                originofspirits {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'originofspirits', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                originofspirits {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url = "https://maven.jaackson.me"
    }
    maven {
        name = "CurseForge"
        url = "https://www.cursemaven.com"
    }
    maven {
        name = "GeckoLib"
        url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
    }
    maven {
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        url 'https://maven.blamejared.com'
    }
    maven {
        url "https://maven.shedaniel.me/"
    }
    maven {
        url = "https://maven.theillusivec4.top/"
    }
    repositories {
        maven { url 'https://maven.blamejared.com' }
    }
    mavenCentral()
}


dependencies {
    // Specify the version of Minecraft to use, If this is any group other then 'net.minecraft' it is assumed
    // that the dep is a ForgeGradle 'patcher' dependency. And it's patches will be applied.
    // The userdev artifact is a special name and will get all sorts of transformations applied to it.
    minecraft 'net.minecraftforge:forge:1.16.5-36.2.30'

    //Mixin
    if (System.getProperty("idea.sync.active") != "true") {
        annotationProcessor 'org.spongepowered:mixin:0.8.2:processor'
    }

    //Blueprint
    implementation fg.deobf("com.minecraftabnormals:abnormals-core:1.16.5-3.3.0")

    //Patchouli
    compileOnly fg.deobf("vazkii.patchouli:Patchouli:1.16.4-53.3:api")
    runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:1.16.4-53.3")

    //Just Enough Items (JEI)
    compileOnly fg.deobf("mezz.jei:jei-1.16.5:7.7.1.150:api")
    // at runtime, use the full JEI jar
    runtimeOnly fg.deobf("mezz.jei:jei-1.16.5:7.7.1.150")

    //Damage Indicators
    implementation fg.deobf("curse.maven:damage-indicator-mod-for-forge-557596:3680500")
    //Critical Lib
    implementation fg.deobf("curse.maven:forge-criticalib-560696:3644558")

    //Dummy Mod
    implementation fg.deobf("curse.maven:forge-mmmmmmmmmmmm-225738:3473005")


    // Oculus
    implementation fg.deobf("curse.maven:oculus-581495:3821219")

    //Mob battle
    implementation fg.deobf("curse.maven:mob-battle-mod-268746:3408702")

    //Upgrade Aquatic
    //  implementation fg.deobf("curse.maven:upgrade-aquatic-326895:3561148")

    // Rubidium
    // implementation fg.deobf("curse.maven:rubidium-574856:3769736")

    //Just Enough Resources (JER)
    //    implementation fg.deobf("curse.maven:just-enough-resources-jer-240630:${project.jer}")

    //The O
    //implementation fg.deobf("curse.maven:the-one-probe-245211:${project.top}")

    //Curios
    //runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:${project.curios}")
    //compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:${project.curios}:api")

    /*
    //FTB Chunks
    implementation fg.deobf("curse.maven:ftb-chunks-forge-314906:3603374")
    //Architectury API
    implementation fg.deobf("curse.maven:architectury-forge-419699:3705903")
    //FTB Library
    implementation fg.deobf("curse.maven:ftb-library-forge-404465:3553840")
    //FTB Teams
    implementation fg.deobf("curse.maven:ftb-teams-forge-404468:3535953")
    */

    //End's Phantasm
    //implementation fg.deobf("curse.maven:phantasm-565254:3613232")

    //Tetra
    /*implementation fg.deobf("curse.maven:tetra-289712:3585032")*/
    //Mutil (For Tetra)
    /*implementation fg.deobf("curse.maven:mutil-351914:3456505")*/

    //Cloth Config
    /*implementation fg.deobf("me.shedaniel.cloth:cloth-config-forge:4.14.54")*/

    //Huge Structure Blocks
    /*implementation fg.deobf("curse.maven:huge-structure-blocks-474114:3318279")*/
    //WorldEdit
    /*implementation fg.deobf("curse.maven:worldedit-225608:3283693")*/

    //Enchantment Descriptions
    /*implementation fg.deobf("curse.maven:enchantment-descriptions-250419:3358861")*/
    //Bookshelf (for EnchDesc)
    /*implementation fg.deobf("net.darkhax.bookshelf:Bookshelf-1.16.5:10.0.1")*/

    //Grapple Hooks
    /*implementation fg.deobf("curse.maven:grappling-hook-mod-238911:3564285")*/

    // Apply for https://github.com/McModLauncher/modlauncher/issues/91
    implementation 'cpw.mods:modlauncher:8.1.3'

}
mixin {
    add sourceSets.main, "originofspirits.mixin-refmap.json"
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
                "Specification-Title": "originofspirits",
                "Specification-Vendor": "SeagullBoi",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"SeagullBoi",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar')
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}